name: Rust

on:
  push:
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:
  build-amd64-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Run UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: |
            ./target/release/ocipack-rs
          args: -o ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_linux
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_linux
  build-amd64-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Env
        run: SET RELEASE_VERSION=$($env:GITHUB_REF -replace "refs/tags/")
      - name: Print Env
        run: |
         chcp 65001 #set code page to utf-8
         echo ("RELEASE_VERSION=" + $env:GITHUB_REF.replace('refs/tags/', '')) >> $env:GITHUB_ENV
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Run UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: |
            ./target/release/ocipack-rs.exe
          args: -o ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_windows.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_windows.exe
  build-amd64-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Run UPX
        run: cp ./target/release/ocipack-rs ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_darwin
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./target/release/ocipack-rs-${{ env.RELEASE_VERSION }}-amd64_darwin
